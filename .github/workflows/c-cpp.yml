name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ut_coverage:
    runs-on: ubuntu-latest
    name: Unit Tests - Coverage
    steps:

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update;
        sudo apt install -y build-essential git cmake make gcc-13 g++-13;
        sudo apt install -y libaio-dev python3-pip cppcheck ninja-build;
        sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu;
        sudo apt install -y curl zip unzip tar pkg-config;
        sudo apt install -y autoconf libtool;
        sudo ln -sf /usr/bin/cpp-13        /usr/bin/cpp;
        sudo ln -sf /usr/bin/g++-13        /usr/bin/g++;
        sudo ln -sf /usr/bin/gcc-13        /usr/bin/gcc;
        sudo ln -sf /usr/bin/gcc-ar-13     /usr/bin/gcc-ar;
        sudo ln -sf /usr/bin/gcc-nm-13     /usr/bin/gcc-nm;
        sudo ln -sf /usr/bin/gcc-ranlib-13 /usr/bin/gcc-ranlib;
        sudo ln -sf /usr/bin/gcov-13       /usr/bin/gcov;
        sudo ln -sf /usr/bin/gcov-dump-13  /usr/bin/gcov-dump;
        sudo ln -sf /usr/bin/gcov-tool-13  /usr/bin/gcov-tool;
        sudo ln -sf /usr/bin/lto-dump-13   /usr/bin/lto-dump;
        sudo ln -sf /usr/bin/g++-13        /usr/bin/c++;
        sudo ln -sf /usr/bin/gcc-13        /usr/bin/cc;
        pip3 install gcovr==6.0;
        sudo git clone https://github.com/Microsoft/vcpkg.git /opt/vcpkg;
        echo 'export VCPKG_ROOT=/opt/vcpkg' >> ~/.bashrc;
        echo 'export PATH=$VCPKG_ROOT:$PATH' >> ~/.bashrc;
        echo 'export VCPKG_FORCE_SYSTEM_BINARIES=1' >> ~/.bashrc;
        sudo rm -rf /var/lib/apt/lists/*;

    - name: Config project
      run: |
        export VCPKG_ROOT=/opt/vcpkg;
        export PATH=$VCPKG_ROOT:$PATH;
        export VCPKG_FORCE_SYSTEM_BINARIES=1;
        which vcpkg;
        cmake --preset debug_tsan;

    - name: Cppcheck
      run: cppcheck --project=build/debug_tsan/compile_commands.json -i tests --error-exitcode=1

    - name: Build project
      run: cmake --build build/debug_tsan -j `nproc`

    - name: Unit test with tsan
      run: TSAN_OPTIONS="suppressions=$(pwd)/tests/tsan.supp" ctest --test-dir build/debug_tsan --output-on-failure -j 2

    - name: Generate coverage file
      run: gcovr -v -r . --xml-pretty --xml=coverage.xml --exclude 'build/*' --exclude 'tests/*' --exclude 'benchmarks/*' --verbose

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: coverage.xml
        verbose: true

#   ut_matrix:
#     strategy:
#       matrix:
#         build_type: [Debug, Release]
#         enable_asan: [0, 1]
#         enable_tsan: [0, 1]
#         exclude:
#           - enable_asn: 1
#           - enable_tsan: 1
#     runs-on: ubuntu-latest
#     name: Unit Test Matrix - ${{ matrix.build_type }} ENABLE_ASAN=${{ matrix.enable_asan }} ENABLE_TSAN=${{ matrix.enable_tsan }}
#     steps:
#     - name: Check out repository
#       uses: actions/checkout@v3
#
#     - name: Install dependencies
#       run: |
#         sudo apt update
#         sudo apt install -y build-essential git cmake make gcc-13 g++-13
#         sudo apt install -y libaio-dev python3-pip cppcheck ninja-build
#         sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
#         sudo apt install -y curl zip unzip tar pkg-config
#         sudo apt install -y autoconf libtool
#         ln -sf /usr/bin/cpp-13        /usr/bin/cpp
#         ln -sf /usr/bin/g++-13        /usr/bin/g++
#         ln -sf /usr/bin/gcc-13        /usr/bin/gcc
#         ln -sf /usr/bin/gcc-ar-13     /usr/bin/gcc-ar
#         ln -sf /usr/bin/gcc-nm-13     /usr/bin/gcc-nm
#         ln -sf /usr/bin/gcc-ranlib-13 /usr/bin/gcc-ranlib
#         ln -sf /usr/bin/gcov-13       /usr/bin/gcov
#         ln -sf /usr/bin/gcov-dump-13  /usr/bin/gcov-dump
#         ln -sf /usr/bin/gcov-tool-13  /usr/bin/gcov-tool
#         ln -sf /usr/bin/lto-dump-13   /usr/bin/lto-dump
#         ln -sf /usr/bin/g++-13        /usr/bin/c++
#         ln -sf /usr/bin/gcc-13        /usr/bin/cc
#         pip3 install gcovr==6.0 --break-system-packages
#         git clone https://github.com/Microsoft/vcpkg.git /opt/vcpkg
#         echo 'export VCPKG_ROOT=/opt/vcpkg' >> ~/.bashrc
#         echo 'export PATH=$VCPKG_ROOT:$PATH' >> ~/.bashrc
#         echo 'export VCPKG_FORCE_SYSTEM_BINARIES=1' >> ~/.bashrc
#         sudo rm -rf /var/lib/apt/lists/*
#
#     - name: Config project
#       run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_ASAN=${{ matrix.enable_asan }} -DENABLE_TSAN=${{ matrix.enable_tsan }}
#
#     - name: Build project
#       run: cmake --build build -j `nproc`
#
#     - name: Test
#       run: TSAN_OPTIONS="suppressions=$(pwd)/tests/tsan.supp" ctest --test-dir build
#
